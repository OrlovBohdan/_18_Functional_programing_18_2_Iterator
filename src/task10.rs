#[test]

/*
/* Fill in the blanks */
fn main() {
    let v1: Vec<i32> = vec![1, 2, 3];

    let v2: Vec<_> = v1.iter().__.__;

    assert_eq!(v2, vec![2, 3, 4]);
}
*/
fn main() {
    let v1: Vec<i32> = vec![1, 2, 3];

    // Ітерація по елементах і зміна кожного елемента
    let v2: Vec<_> = v1.iter().map(|&x| x + 1).collect();

    assert_eq!(v2, vec![2, 3, 4]);
}



/*
v1.iter(): Створює ітератор, що дає доступ до посилань на елементи вектора.
map(|&x| x + 1): Метод map застосовує функцію до кожного елемента. У цьому випадку розіменовуємо посилання (&x),
щоб отримати значення і збільшити його на одиницю.
collect(): Перетворює результат ітерації в новий вектор.
*/